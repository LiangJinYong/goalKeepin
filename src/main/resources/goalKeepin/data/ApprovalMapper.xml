<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="goalKeepin.data.ApprovalMapper">

	<resultMap type="Approval" id="Approval">
		<id property="authNo" column="authNo" />
 		<result property="authTypeCd" column="authTypeCd" />
 		<result property="baseNmEn" column="baseNmEn" />
 		<result property="authRegDate" column="authRegDate" />
 		<result property="approvalStatusCd" column="approvalStatusCd" />
	</resultMap>
	
	<sql id="approval">
		FROM CHALLENGE_AUTH_TB cat INNER JOIN OPERATED_CHALLENGE_TB oct ON cat.auth_c_no = oct.challenge_no
		INNER JOIN BASE_CHALLENGE_TB bct ON oct.challenge_base_no = bct.base_no
		INNER JOIN TRANSLATION_TB tt ON bct.base_nm_t_no = tt.trans_no
		WHERE 1 = 1
		<if test="verificationType != null and verificationType != ''">
			AND cat.auth_tp_cd = #{verificationType}
		</if>
		<if test="approvalStatusCd != null and approvalStatusCd != ''">
			AND cat.auth_st_cd = #{approvalStatusCd}
		</if>
		<if test="project != null and project != ''">
			AND bct.base_no = #{project}
		</if>
		<if test="category != null and category != ''">
			AND INSTR(bct.base_habit_tp_cd, #{category}) > 0 
		</if>
	</sql>
	
	<select id="getTotalApprovalCount" parameterType="map" resultType="int">
		/* getTotalApprovalCount */
		SELECT COUNT(*)
		<include refid="approval" />
	</select>
	
	<select id="selectApprovalList" parameterType="map" resultMap="Approval">
		/* selectApprovalList */
		SELECT cat.auth_no authNo, cat.auth_tp_cd authTypeCd, tt.trans_en baseNmEn, cat.auth_reg_dt authRegDate, cat.auth_st_cd approvalStatusCd
		<include refid="approval" />
		ORDER BY
		<if test="sortField != null">
			${sortField} ${sortOrder},
		</if>
		auth_reg_dt DESC
		LIMIT ${startIndex}, ${pageSize}
	</select>
	
	<select id="selectApprovalDetail" parameterType="long" resultType="goalKeepin.web.dto.ApprovalDetailResponseDto">
		/* selectApprovalDetail */
		SELECT cat.auth_no authNo, cat.auth_tp_cd challengeAuthType, cat.auth_url challengeAuthUrl, cat.auth_reg_dt authRegDate, tt.trans_en challengeName, oct.challenge_start_dt startDate, oct.challenge_end_dt endDate, ut.user_id authUserId, ut.user_email authUserEmail, cat.auth_st_cd approvalStatusCd, oct.challenge_st_cd challengeStatusCd 
		FROM CHALLENGE_AUTH_TB cat
		LEFT JOIN USER_TB ut ON cat.auth_user_no = ut.user_no
		INNER JOIN OPERATED_CHALLENGE_TB oct ON cat.auth_c_no = oct.challenge_no
		INNER JOIN BASE_CHALLENGE_TB bct ON oct.challenge_base_no = bct.base_no
		INNER JOIN TRANSLATION_TB tt ON bct.base_nm_t_no = tt.trans_no
		WHERE cat.auth_no = #{authNo}
	</select>
	
	<select id="getNextWatingAuthNo" parameterType="long" resultType="long">
		/* getNextWatingAuthNo */
		SELECT auth_no nextWatingAuthNo
		FROM CHALLENGE_AUTH_TB cat
		WHERE cat.AUTH_REG_DT &lt; (SELECT auth_reg_dt FROM CHALLENGE_AUTH_TB WHERE auth_no = #{authNo})
		AND cat.auth_st_cd = 'AS01'
		ORDER BY auth_reg_dt DESC
		LIMIT 1
	</select>
	
	<update id="updateAuthAprovalStatus" parameterType="map">
		/* updateAuthAprovalStatus */
		UPDATE CHALLENGE_AUTH_TB
		SET auth_st_cd = #{approvalStatus}
		WHERE auth_no = #{authNo}
	</update>
	
	<select id="getChallengeAuthNum" parameterType="long" resultType="int">
		/* getChallengeAuthNum */
		SELECT COUNT(*)
		FROM CHALLENGE_AUTH_TB
		WHERE auth_c_no = (SELECT auth_c_no FROM CHALLENGE_AUTH_TB WHERE auth_no = #{authNo})
		AND auth_user_no = (SELECT auth_user_no FROM CHALLENGE_AUTH_TB WHERE auth_no = #{authNo})
		AND auth_st_cd = 'AS02'
	</select>
	
	<select id="getChallengeMaxResult" parameterType="long" resultType="int">
		/* getChallengeMaxResult */
		SELECT oct.challenge_max_result
		FROM CHALLENGE_AUTH_TB cat
		INNER JOIN OPERATED_CHALLENGE_TB oct ON cat.auth_c_no = oct.challenge_no
		WHERE cat.auth_no = #{authNo}
	</select>
	
	<update id="updateChallengeResult" parameterType="map">
		/* updateChallengeResult */
		UPDATE CHALLENGE_ENTRY_TB
		SET entry_result = #{result}, result_grade = #{resultGrade}
		WHERE entry_user_no = (SELECT auth_user_no FROM CHALLENGE_AUTH_TB WHERE auth_no = #{authNo})
 		AND entry_challenge_no = (SELECT auth_c_no FROM CHALLENGE_AUTH_TB WHERE auth_no = #{authNo})
	</update>
	
	<select id="selectProjectList" resultType="hashmap">
		/* selectProjectList */
		SELECT bct.base_no baseNo, tt.trans_en baseNmEn
		FROM BASE_CHALLENGE_TB bct
		INNER JOIN TRANSLATION_TB tt
		ON bct.base_nm_t_no = tt.trans_no
		ORDER BY bct.base_reg_dt DESC		
	</select>
	
	<delete id="deleteApproval" parameterType="long">
		/* deleteApproval */
		DELETE FROM CHALLENGE_AUTH_TB WHERE auth_no = #{authNo}
	</delete>
</mapper>

